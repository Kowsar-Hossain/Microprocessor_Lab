#define RCC_BASE 	0x40021000
#define GPIOC_BASE 	0x40011000
#define TIM2_BASE 	0x40000000

#define RCC_APB2ENR (*(volatile unsigned int *)(RCC_BASE + 0x18))
#define GPIOC_CRH 	(*(volatile unsigned int *)(GPIOC_BASE + 0x04))
#define GPIOC_ODR 	(*(volatile unsigned int *)(GPIOC_BASE + 0x0C))

#define RCC_APB1ENR (*(volatile unsigned int *)(RCC_BASE + 0x1C))
#define TIM2_PSC	(*(volatile unsigned int *)(TIM2_BASE + 0x28))
#define TIM2_ARR	(*(volatile unsigned int *)(TIM2_BASE + 0x2C))
#define TIM2_SR		(*(volatile unsigned int *)(TIM2_BASE + 0x10))
#define TIM2_CNT	(*(volatile unsigned int *)(TIM2_BASE + 0x24))
#define TIM2_CR1	(*(volatile unsigned int *)(TIM2_BASE + 0x00))


void delay(unsigned int ms){
	TIM2_ARR = ms;
	while(1){
		if(TIM2_SR & (1U << 0)){
			TIM2_SR &= ~(1U <<0);
			break;
		}
	}
}

int main(void){
	//Enable GPIOC and TIM2 clocks
	RCC_APB2ENR |= (1U << 4);
	RCC_APB1ENR |= (1U << 0);

	GPIOC_CRH &= 0xFF0FFFFF;
	GPIOC_CRH |= 0x00200000;

	TIM2_PSC = 7999;
	TIM2_ARR = 500;
	TIM2_SR = 0;
	TIM2_CR1 = 0x1;

	while(1){
		GPIOC_ODR = 0x2000;
		delay(1000);
	}

}
